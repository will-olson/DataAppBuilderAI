{"ast":null,"code":"var _jsxFileName = \"/Users/willolson/Development/GrowthMarketingAI/client/src/components/pages/FeatureUsagePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Card, CardContent, CircularProgress } from '@mui/material';\nimport { fetchFeatureUsageAnalytics } from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeatureUsagePage = () => {\n  _s();\n  const [featureData, setFeatureData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchFeatureData = async () => {\n      try {\n        console.log('Fetching feature usage data');\n        setLoading(true);\n        const data = await fetchFeatureUsageAnalytics();\n        console.log('Received feature usage data:', data);\n\n        // Validate data structure\n        if (!data) {\n          throw new Error('No data received');\n        }\n\n        // Ensure both keys exist with default empty arrays\n        const processedData = {\n          featureUsageBySegment: data.featureUsageBySegment || [],\n          topFeatures: data.topFeatures || []\n        };\n        setFeatureData(processedData);\n        setLoading(false);\n      } catch (error) {\n        console.error('Feature usage fetch error', error);\n        setError(error);\n        setLoading(false);\n      }\n    };\n    fetchFeatureData();\n  }, []);\n\n  // Loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading Feature Usage...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Error state\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: [\"Error loading feature usage data: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Ensure featureData exists and has expected properties\n  if (!featureData || !Array.isArray(featureData.featureUsageBySegment) || !Array.isArray(featureData.topFeatures)) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No feature usage data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Feature Usage Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Top Features\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), featureData.topFeatures.length > 0 ? featureData.topFeatures.map((feature, index) => /*#__PURE__*/_jsxDEV(Typography, {\n          children: [feature.name, \": \", (feature.usagePercentage * 100).toFixed(2), \"%\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"No top features data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Feature Usage by Segment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), featureData.featureUsageBySegment.length > 0 ? featureData.featureUsageBySegment.map((segment, segmentIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: segment.segment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), segment.features.map((feature, featureIndex) => /*#__PURE__*/_jsxDEV(Typography, {\n            children: [feature.name, \": \", (feature.usagePercentage * 100).toFixed(2), \"%\"]\n          }, featureIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 19\n          }, this))]\n        }, segmentIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"No segment feature usage data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(FeatureUsagePage, \"LvRL6DU3B4iuoncb5CyG+HXhwko=\");\n_c = FeatureUsagePage;\nexport default FeatureUsagePage;\nvar _c;\n$RefreshReg$(_c, \"FeatureUsagePage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Card","CardContent","CircularProgress","fetchFeatureUsageAnalytics","jsxDEV","_jsxDEV","FeatureUsagePage","_s","featureData","setFeatureData","loading","setLoading","error","setError","fetchFeatureData","console","log","data","Error","processedData","featureUsageBySegment","topFeatures","children","fileName","_jsxFileName","lineNumber","columnNumber","color","message","Array","isArray","variant","length","map","feature","index","name","usagePercentage","toFixed","sx","mt","segment","segmentIndex","features","featureIndex","_c","$RefreshReg$"],"sources":["/Users/willolson/Development/GrowthMarketingAI/client/src/components/pages/FeatureUsagePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Container, \n  Typography, \n  Card, \n  CardContent,\n  CircularProgress\n} from '@mui/material';\nimport { fetchFeatureUsageAnalytics } from '../../services/api';\n\nconst FeatureUsagePage = () => {\n  const [featureData, setFeatureData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchFeatureData = async () => {\n      try {\n        console.log('Fetching feature usage data');\n        setLoading(true);\n        \n        const data = await fetchFeatureUsageAnalytics();\n        \n        console.log('Received feature usage data:', data);\n        \n        // Validate data structure\n        if (!data) {\n          throw new Error('No data received');\n        }\n        \n        // Ensure both keys exist with default empty arrays\n        const processedData = {\n          featureUsageBySegment: data.featureUsageBySegment || [],\n          topFeatures: data.topFeatures || []\n        };\n        \n        setFeatureData(processedData);\n        setLoading(false);\n      } catch (error) {\n        console.error('Feature usage fetch error', error);\n        setError(error);\n        setLoading(false);\n      }\n    };\n\n    fetchFeatureData();\n  }, []);\n\n  // Loading state\n  if (loading) {\n    return (\n      <Container>\n        <CircularProgress />\n        <Typography>Loading Feature Usage...</Typography>\n      </Container>\n    );\n  }\n\n  // Error state\n  if (error) {\n    return (\n      <Container>\n        <Typography color=\"error\">\n          Error loading feature usage data: {error.message}\n        </Typography>\n      </Container>\n    );\n  }\n\n  // Ensure featureData exists and has expected properties\n  if (!featureData || \n      !Array.isArray(featureData.featureUsageBySegment) || \n      !Array.isArray(featureData.topFeatures)) {\n    return (\n      <Container>\n        <Typography>No feature usage data available</Typography>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <Typography variant=\"h4\">Feature Usage Analytics</Typography>\n      \n      <Card>\n        <CardContent>\n          <Typography variant=\"h5\">Top Features</Typography>\n          {featureData.topFeatures.length > 0 ? (\n            featureData.topFeatures.map((feature, index) => (\n              <Typography key={index}>\n                {feature.name}: {(feature.usagePercentage * 100).toFixed(2)}%\n              </Typography>\n            ))\n          ) : (\n            <Typography>No top features data available</Typography>\n          )}\n        </CardContent>\n      </Card>\n\n      <Card sx={{ mt: 3 }}>\n        <CardContent>\n          <Typography variant=\"h5\">Feature Usage by Segment</Typography>\n          {featureData.featureUsageBySegment.length > 0 ? (\n            featureData.featureUsageBySegment.map((segment, segmentIndex) => (\n              <div key={segmentIndex}>\n                <Typography variant=\"h6\">{segment.segment}</Typography>\n                {segment.features.map((feature, featureIndex) => (\n                  <Typography key={featureIndex}>\n                    {feature.name}: {(feature.usagePercentage * 100).toFixed(2)}%\n                  </Typography>\n                ))}\n              </div>\n            ))\n          ) : (\n            <Typography>No segment feature usage data available</Typography>\n          )}\n        </CardContent>\n      </Card>\n    </Container>\n  );\n};\n\nexport default FeatureUsagePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}