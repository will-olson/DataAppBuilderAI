{"ast":null,"code":"var _jsxFileName = \"/Users/willolson/Development/GrowthMarketingAI/client/src/components/pages/ChurnPredictionPage.js\",\n  _s = $RefreshSig$();\n// ChurnPredictionPage.js\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Card, CardContent, Chip, List, ListItem, ListItemText } from '@mui/material';\nimport { fetchChurnPredictionData } from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChurnPredictionPage = () => {\n  _s();\n  const [churnData, setChurnData] = useState({\n    overallChurnRisk: 0,\n    highRiskSegments: [],\n    churnFactors: []\n  });\n  useEffect(() => {\n    const fetchChurnData = async () => {\n      try {\n        const data = await fetchChurnPredictionData();\n        setChurnData(data);\n      } catch (error) {\n        console.error('Churn prediction fetch error', error);\n      }\n    };\n    fetchChurnData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Churn Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: [\"Overall Churn Risk: \", (churnData.overallChurnRisk * 100).toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"High-Risk Segments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), churnData.highRiskSegments.map(segment => /*#__PURE__*/_jsxDEV(Chip, {\n          label: `${segment.name}: ${(segment.churnRisk * 100).toFixed(2)}%`,\n          color: \"warning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Key Churn Factors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: churnData.churnFactors.map(factor => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: factor.name,\n              secondary: `Impact: ${(factor.impact * 100).toFixed(2)}%`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n};\n_s(ChurnPredictionPage, \"6nrBguk9QoqZEh8CaQerbiATtGM=\");\n_c = ChurnPredictionPage;\nvar _c;\n$RefreshReg$(_c, \"ChurnPredictionPage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Card","CardContent","Chip","List","ListItem","ListItemText","fetchChurnPredictionData","jsxDEV","_jsxDEV","ChurnPredictionPage","_s","churnData","setChurnData","overallChurnRisk","highRiskSegments","churnFactors","fetchChurnData","data","error","console","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","map","segment","label","name","churnRisk","color","factor","primary","secondary","impact","_c","$RefreshReg$"],"sources":["/Users/willolson/Development/GrowthMarketingAI/client/src/components/pages/ChurnPredictionPage.js"],"sourcesContent":["// ChurnPredictionPage.js\nimport React, { useState, useEffect } from 'react';\nimport { \n  Container, \n  Typography, \n  Card, \n  CardContent, \n  Chip,\n  List,\n  ListItem,\n  ListItemText\n} from '@mui/material';\nimport { fetchChurnPredictionData } from '../../services/api';\n\nconst ChurnPredictionPage = () => {\n    const [churnData, setChurnData] = useState({\n      overallChurnRisk: 0,\n      highRiskSegments: [],\n      churnFactors: []\n    });\n  \n    useEffect(() => {\n      const fetchChurnData = async () => {\n        try {\n          const data = await fetchChurnPredictionData();\n          setChurnData(data);\n        } catch (error) {\n          console.error('Churn prediction fetch error', error);\n        }\n      };\n  \n      fetchChurnData();\n    }, []);\n  \n    return (\n      <Container>\n        <Typography variant=\"h4\">Churn Prediction</Typography>\n        \n        <Card>\n          <CardContent>\n            <Typography variant=\"h5\">\n              Overall Churn Risk: {(churnData.overallChurnRisk * 100).toFixed(2)}%\n            </Typography>\n            \n            <Typography variant=\"h6\">High-Risk Segments</Typography>\n            {churnData.highRiskSegments.map(segment => (\n              <Chip \n                label={`${segment.name}: ${(segment.churnRisk * 100).toFixed(2)}%`} \n                color=\"warning\" \n              />\n            ))}\n            \n            <Typography variant=\"h6\">Key Churn Factors</Typography>\n            <List>\n              {churnData.churnFactors.map(factor => (\n                <ListItem>\n                  <ListItemText \n                    primary={factor.name} \n                    secondary={`Impact: ${(factor.impact * 100).toFixed(2)}%`} \n                  />\n                </ListItem>\n              ))}\n            </List>\n          </CardContent>\n        </Card>\n      </Container>\n    );\n  };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}