{"ast":null,"code":"var _jsxFileName = \"/Users/willolson/Development/GrowthMarketingAI/client/src/components/segments/SegmentationWorkspace.js\",\n  _s = $RefreshSig$();\n// src/components/segments/SegmentationWorkspace.js\nimport React, { useState, useEffect } from 'react';\nimport { fetchUserSegments } from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SegmentationWorkspace = () => {\n  _s();\n  const [segments, setSegments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const loadSegments = async () => {\n      try {\n        const data = await fetchUserSegments();\n        if (data) {\n          setSegments(data);\n          setLoading(false);\n        } else {\n          throw new Error('No data received');\n        }\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    loadSegments();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading segments...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Segments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), segments.map((segment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: segment.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User Count: \", segment.userCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Average LTV: $\", segment.avgLTV.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(SegmentationWorkspace, \"9hl3wH5Yt4BFNwVtOHiP/6n5bvk=\");\n_c = SegmentationWorkspace;\nexport default SegmentationWorkspace;\nvar _c;\n$RefreshReg$(_c, \"SegmentationWorkspace\");","map":{"version":3,"names":["React","useState","useEffect","fetchUserSegments","jsxDEV","_jsxDEV","SegmentationWorkspace","_s","segments","setSegments","loading","setLoading","error","setError","loadSegments","data","Error","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","segment","index","name","userCount","avgLTV","toFixed","_c","$RefreshReg$"],"sources":["/Users/willolson/Development/GrowthMarketingAI/client/src/components/segments/SegmentationWorkspace.js"],"sourcesContent":["// src/components/segments/SegmentationWorkspace.js\nimport React, { useState, useEffect } from 'react';\nimport { fetchUserSegments } from '../../services/api';\n\nconst SegmentationWorkspace = () => {\n  const [segments, setSegments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadSegments = async () => {\n      try {\n        const data = await fetchUserSegments();\n        if (data) {\n          setSegments(data);\n          setLoading(false);\n        } else {\n          throw new Error('No data received');\n        }\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n\n    loadSegments();\n  }, []);\n\n  if (loading) return <div>Loading segments...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div>\n      <h2>User Segments</h2>\n      {segments.map((segment, index) => (\n        <div key={index}>\n          <h3>{segment.name}</h3>\n          <p>User Count: {segment.userCount}</p>\n          <p>Average LTV: ${segment.avgLTV.toFixed(2)}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SegmentationWorkspace;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,iBAAiB,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMZ,iBAAiB,CAAC,CAAC;QACtC,IAAIY,IAAI,EAAE;UACRN,WAAW,CAACM,IAAI,CAAC;UACjBJ,UAAU,CAAC,KAAK,CAAC;QACnB,CAAC,MAAM;UACL,MAAM,IAAIK,KAAK,CAAC,kBAAkB,CAAC;QACrC;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZJ,QAAQ,CAACI,GAAG,CAACC,OAAO,CAAC;QACrBP,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE,oBAAOL,OAAA;IAAAc,QAAA,EAAK;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAClD,IAAIX,KAAK,EAAE,oBAAOP,OAAA;IAAAc,QAAA,GAAK,SAAO,EAACP,KAAK;EAAA;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE3C,oBACElB,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBf,QAAQ,CAACgB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BrB,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAAc,QAAA,EAAKM,OAAO,CAACE;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvBlB,OAAA;QAAAc,QAAA,GAAG,cAAY,EAACM,OAAO,CAACG,SAAS;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtClB,OAAA;QAAAc,QAAA,GAAG,gBAAc,EAACM,OAAO,CAACI,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAHxCG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChB,EAAA,CAvCID,qBAAqB;AAAAyB,EAAA,GAArBzB,qBAAqB;AAyC3B,eAAeA,qBAAqB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}